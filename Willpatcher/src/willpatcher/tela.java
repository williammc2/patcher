/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package willpatcher;

import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author William mendes
 */
public class tela extends javax.swing.JFrame {
    String diretorio = null;
    String versao = null;
    String disco = null;
    ArrayList<String> russo = new ArrayList<>();
    ArrayList<String> koreano = new ArrayList<>();

    /**
     * Creates new form tela
     */
    public tela() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        combobox = new javax.swing.JComboBox<>();
        botao = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        informcaoes = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        download_tag = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        selecione_jogo = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(0, 0));
        setMinimumSize(new java.awt.Dimension(632, 325));
        setResizable(false);
        setSize(new java.awt.Dimension(659, 300));
        getContentPane().setLayout(null);

        combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ","MANUAL", "A:", "B:", "C:", "D:","E:","F:","G:","H:","I:","J:","K:","L:","M:","N:", }));
        combobox.setToolTipText("");
        combobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboboxActionPerformed(evt);
            }
        });
        getContentPane().add(combobox);
        combobox.setBounds(20, 240, 100, 20);

        botao.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        botao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/downloadbutton2.png"))); // NOI18N
        botao.setBorderPainted(false);
        botao.setContentAreaFilled(false);
        botao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoActionPerformed(evt);
            }
        });
        getContentPane().add(botao);
        botao.setBounds(250, 190, 200, 50);

        jLabel2.setFont(new java.awt.Font("Microsoft YaHei UI Light", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Tradução PT_BR  para Bless Russo ou Koreano");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(80, 270, 450, 24);

        informcaoes.setForeground(new java.awt.Color(255, 255, 255));
        informcaoes.setText("Selecione o Diretorio do jogo.");
        getContentPane().add(informcaoes);
        informcaoes.setBounds(20, 210, 200, 30);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Status:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(204, 250, 40, 14);

        download_tag.setEditable(false);
        getContentPane().add(download_tag);
        download_tag.setBounds(250, 250, 240, 20);

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Desenvolvido por: William Mendes");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(10, 0, 240, 14);

        selecione_jogo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "RUSSO", "COREANO"}));
        selecione_jogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecione_jogoActionPerformed(evt);
            }
        });
        getContentPane().add(selecione_jogo);
        selecione_jogo.setBounds(20, 190, 90, 20);

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Escolha Russo ou Koreano:");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(20, 170, 170, 14);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/YouTube-icon.png"))); // NOI18N
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(520, 110, 50, 40);

        jLabel9.setForeground(new java.awt.Color(255, 51, 51));
        jLabel9.setText(" Inscreva-se no Canal!");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(490, 90, 210, 14);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/guild.png"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(40, 110, 80, 20);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logan_guild_low_size.png"))); // NOI18N
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(20, 30, 130, 90);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pagseguro (1).png"))); // NOI18N
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(520, 250, 120, 61);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bless-online---woman-keyart-1441069414031_632x300.jpg"))); // NOI18N
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 632, 300);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboboxActionPerformed
        // TODO add your handling code here:

        if (versao != null) {
            disco = (String) combobox.getSelectedItem();
            
            if (versao == "COREANO") {
                if (disco == "MANUAL") {
                    JOptionPane.showMessageDialog(null, "Vá até a pasta Bless/BLGame/Localization/KOR/");
                    String caminho = null;
                    JFileChooser fc = new JFileChooser();

                    fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                    int res = fc.showOpenDialog(null);
                    if (res == JFileChooser.APPROVE_OPTION) {
                        File diretorio = fc.getSelectedFile();
                        JOptionPane.showMessageDialog(null, "Voce Selecionou o diretorio " + diretorio + " como instação do jogo.");
                    } else {
                        JOptionPane.showMessageDialog(null, "Voce nao selecionou nenhum diretorio");
                    }
                    caminho = fc.getSelectedFile().getAbsolutePath();
                    diretorio = caminho + "/";

                } else {

                    diretorio = disco + "/Neowiz/Pmang/Bless/BLGame/Localization/KOR/";

                    JOptionPane.showMessageDialog(null, "Voce Selecionou o diretorio " + diretorio + " como instação do jogo.");
                }
            } else {
                if (disco == "MANUAL") {
                    JOptionPane.showMessageDialog(null, "Vá até a pasta Bless/BLGame/Localization/RUS/");
                    String caminho = null;
                    JFileChooser fc = new JFileChooser();

                    fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                    int res = fc.showOpenDialog(null);
                    if (res == JFileChooser.APPROVE_OPTION) {
                        File diretorio = fc.getSelectedFile();
                        JOptionPane.showMessageDialog(null, "Voce Selecionou o diretorio " + diretorio + " como instação do jogo.");
                    } else {
                        JOptionPane.showMessageDialog(null, "Voce nao selecionou nenhum diretorio");
                    }
                    caminho = fc.getSelectedFile().getAbsolutePath();
                    diretorio = caminho + "/";

                } else {
                    if (disco == "C:") {
                        diretorio = disco + "/Games101XP/install/Bless/BLGame/Localization/RUS/";

                        JOptionPane.showMessageDialog(null, "Voce Selecionou o diretorio " + diretorio + " como instação do jogo.");

                    } else {
                        diretorio = disco + "/Bless/BLGame/Localization/RUS/";

                        JOptionPane.showMessageDialog(null, "Voce Selecionou o diretorio " + diretorio + " como instação do jogo.");

                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione a versão do jogo primeiro.");
        }


    }//GEN-LAST:event_comboboxActionPerformed


    private void botaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoActionPerformed

        // Adicionar o nome de cada aquivo em um String array//
        russo.add("AbnormalStatusInfo.RUS");
        russo.add("AccountInfo.RUS");
        russo.add("AuraInfo.RUS");
        russo.add("BLEditor.RUS");
        russo.add("BLEnum.RUS");
        russo.add("BLGame.RUS");
        russo.add("ChatCMDInfo.RUS");
        russo.add("CinematicScript.RUS");
        russo.add("CombatFlairInfo.RUS");
        russo.add("CraftInfo.RUS");
        russo.add("CustomizingInfo.RUS");
        russo.add("DialogInfo.RUS");
        russo.add("DoorInfo.RUS");
        russo.add("Engine.RUS");
        russo.add("FactionInfo.RUS");
        russo.add("FellowInfo.RUS");
        russo.add("GameStringInfo.RUS");
        russo.add("GatherInfo.RUS");
        russo.add("Questinfo.RUS");
        russo.add("GuildInfo.RUS");
        russo.add("GatherInfo.RUS");
        russo.add("HelpInfo.RUS");
        russo.add("InventoryInfo.RUS");
        russo.add("Item.RUS");
        russo.add("ItemInfo.RUS");
        russo.add("LetterInfo.RUS");
        russo.add("LocationInfo.RUS");
        russo.add("MissionInfo.RUS");
        russo.add("MonologInfo.RUS");
        russo.add("MonsterBookInfo.RUS");
        russo.add("MountInf.RUS");
        russo.add("MountInfo.RUS");
        russo.add("NPCInfo.RUS");
        russo.add("NPCSkillInfo.RUS");
        russo.add("OrderInfo.RUS");
        russo.add("PCParam.RUS");
        russo.add("PCInfo.RUS");
        russo.add("PCSkillInfo.RUS");
        russo.add("PetInfo.RUS");
        russo.add("PropInfo.RUS");
        russo.add("ShopInfo.RUS");
        russo.add("Skill.RUS");
        russo.add("SocialActionInfo.RUS");
        russo.add("SystemMailInfo.RUS");
        russo.add("SystemMessageInfo.RUS");
        russo.add("TamingInfo.RUS");
        russo.add("TrapInfo.RUS");
        russo.add("VoluntaryAction.RUS");
        russo.add("VoluntaryActionInfo.RUS");
        russo.add("WarInfo.RUS");
        russo.add("WaypointStringInfo.RUS");
        russo.add("WorldInfo.RUS");
        int size = russo.size();
        
        koreano.add("AbnormalStatusInfo.KOR");
        koreano.add("AccountInfo.KOR");
        koreano.add("AuraInfo.KOR");
        koreano.add("BLEditor.KOR");
        koreano.add("BLEnum.KOR");
        koreano.add("BLGame.KOR");
        koreano.add("ChatCMDInfo.KOR");
        koreano.add("CinematicScript.KOR");
        koreano.add("CombatFlairInfo.KOR");
        koreano.add("CraftInfo.KOR");
        koreano.add("CustomizingInfo.KOR");
        koreano.add("DialogInfo.KOR");
        koreano.add("DoorInfo.KOR");
        koreano.add("Engine.KOR");
        koreano.add("FactionInfo.KOR");
        koreano.add("FellowInfo.KOR");
        koreano.add("GameStringInfo.KOR");
        koreano.add("GatherInfo.KOR");
        koreano.add("GFxUI.KOR");
        koreano.add("GuildInfo.KOR");
        koreano.add("HelpInfo.KOR");
        koreano.add("InventoryInfo.KOR");
        koreano.add("Item.KOR");
        koreano.add("ItemInfo.KOR");
        koreano.add("LetterInfo.KOR");
        koreano.add("LocationInfo.KOR");
        koreano.add("MissionInfo.KOR");
        koreano.add("MonologInfo.KOR");
        koreano.add("MonsterBookInfo.KOR");
        koreano.add("MountInfo.KOR");
        koreano.add("NPCInfo.KOR");
        koreano.add("NPCSkillInfo.KOR");
        koreano.add("PCInfo.KOR");
        koreano.add("PCParam.KOR");
        koreano.add("PCSkillInfo.KOR");
        koreano.add("PetInfo.KOR");
        koreano.add("PropInfo.KOR");
        koreano.add("QuestInfo.KOR");
        koreano.add("ShopInfo.KOR");
        koreano.add("Skill.KOR");
        koreano.add("SkillInfo.KOR");
        koreano.add("SocialActionInfo.KOR");
        koreano.add("SystemMailInfo.KOR");
        koreano.add("SystemMessageInfo.KOR");
        koreano.add("TamingInfo.KOR");
        koreano.add("TrapInfo.KOR");
        koreano.add("VoluntaryAction.KOR");
        koreano.add("VoluntaryActionInfo.KOR");
        koreano.add("WarInfo.KOR");
        koreano.add("WaypointStringInfo.KOR");
        koreano.add("WorldInfo.KOR");
        int sizekor = koreano.size();
        
        

        if (versao == null) {
            JOptionPane.showMessageDialog(null, "Voce não selecionou a versão do jogo, Favor escolha Russo ou koreano.");
        } else {
            if (disco == null) {

                JOptionPane.showMessageDialog(null, "Selecione o diretorio do jogo.");
            } else {
                File file = new File(diretorio);

                if (versao == "RUSSO") {
                    if (file.isDirectory()) {
                        for (int j = 0; j < size; j++) {
                            try {
                                String url2 = "http://mmobrazil.com/patcher_files/" + russo.get(j);
                                URL url = new URL(url2);
                                String path = russo.get(j) + " Baixando...";
                                download_tag.setText(path);
                                download_tag.paintAll(download_tag.getGraphics());
                                URLConnection conn = url.openConnection();
                                InputStream in = conn.getInputStream();
                                FileOutputStream out = new FileOutputStream(diretorio + russo.get(j));
                                byte[] b = new byte[1024];
                                int count;
                                while ((count = in.read(b)) >= 0) {
                                    out.write(b, 0, count);
                                }
                                out.flush();
                                out.close();
                                in.close();
                            } catch (IOException e) {
                                e.printStackTrace();
                            }

                        }
                                JOptionPane.showMessageDialog(null, "Tradução Completa! Bom jogo :) ");
                                System.exit(0);
                    } else {

                        JOptionPane.showMessageDialog(null, "Não existe jogo neste Diretorio.");

                    }

                } else {
                    if (file.isDirectory()) {

                        for (int k = 0; k < sizekor; k++) {
                            try {
                                String url2 = "http://mmobrazil.com/patcher_files/" + koreano.get(k);
                                URL url = new URL(url2);
                                String path = koreano.get(k) + " Baixando...";
                                download_tag.setText(path);
                                download_tag.paintAll(download_tag.getGraphics());
                                URLConnection conn = url.openConnection();
                                InputStream in = conn.getInputStream();
                                FileOutputStream out = new FileOutputStream(diretorio + koreano.get(k));
                                byte[] b = new byte[1024];
                                int count;
                                while ((count = in.read(b)) >= 0) {
                                    out.write(b, 0, count);
                                }
                                out.flush();
                                out.close();
                                in.close();
                            } catch (IOException e) {
                                e.printStackTrace();
                            }

                        }
                                JOptionPane.showMessageDialog(null, "Tradução Completa! Bom jogo :) ");
                                System.exit(0);
                    } else {

                        JOptionPane.showMessageDialog(null, "Não existe jogo neste Diretorio.");

                    }
                }
            }
        }
    }//GEN-LAST:event_botaoActionPerformed

    private void selecione_jogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecione_jogoActionPerformed
        // TODO add your handling code here:
        versao = (String) selecione_jogo.getSelectedItem();
    }//GEN-LAST:event_selecione_jogoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Desktop desktop = null;
        desktop = Desktop.getDesktop();
        URI uri = null;
        try {
            uri = new URI("https://www.youtube.com/channel/UCsMU_IHhtoyJBAD0CxEQMRQ");
            desktop.browse(uri);
        } catch (IOException ioe) {
            ioe.printStackTrace();
        } catch (URISyntaxException use) {
            use.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Desktop desktop = null;
        desktop = Desktop.getDesktop();
        URI uri = null;
        try {
            uri = new URI("http://mmobrazil.com/ash/");
            desktop.browse(uri);
        } catch (IOException ioe) {
            ioe.printStackTrace();
        } catch (URISyntaxException use) {
            use.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        Desktop desktop = null;
        desktop = Desktop.getDesktop();
        URI uri = null;
        try {
            uri = new URI("https://pag.ae/bldVTl5");
            desktop.browse(uri);
        } catch (IOException ioe) {
            ioe.printStackTrace();
        } catch (URISyntaxException use) {
            use.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tela.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tela.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tela.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tela.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botao;
    private javax.swing.JComboBox<String> combobox;
    private javax.swing.JTextField download_tag;
    private javax.swing.JLabel informcaoes;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox<String> selecione_jogo;
    // End of variables declaration//GEN-END:variables
}
